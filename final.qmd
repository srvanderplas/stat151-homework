---
title: "Final Exam"
author: "Your Name"
format: html
---

For each of these problems, you may choose to solve the problem in either R or python.

## Scrabble!

Here are the point values for each letter in Scrabble.

- 0 Points - Blank tile.
- 1 Point - A, E, I, L, N, O, R, S, T and U.
- 2 Points - D and G.
- 3 Points - B, C, M and P.
- 4 Points - F, H, V, W and Y.
- 5 Points - K.
- 8 Points - J and X.
- 10 Points - Q and Z.

### Part 1: Functions

(10 points + 3 possible bonus)

Write a function named `scrabble_score(x)` which will take a word as an argument and determine the point value of that word. Assume that the blank tile is indicated by _.

Make sure your function includes input validation, so that if someone calls `scrabble_score(3)`, your function provides an appropriate error.

For a bonus point, make sure your function accepts lower-case and upper-case input and treats both the same.

For +2 points, make your function vectorized, so that you can handle either single characters or a vector of character input.

```{r functions}

```

```{r function-test, error = T, collapse = T}
scrabble_score(3)
scrabble_score("elephant")
scrabble_score("qi")
```

```{python functions-py}

```

```{python function-test-py, error = T, collapse = T}
scrabble_score(3)
scrabble_score("elephant")
scrabble_score("qi")
```


### Scrabble scoring

(15 points)


Read in the text file [scrabble.txt](https://raw.githubusercontent.com/srvanderplas/stat151-homework/main/scrabble.txt) and create a data frame with the word in one column. Create (and fill) a column for the word score and another column with the word length. (3 points per column)

Plot word length and word score in an appropriate plot (`geom_jitter` may be helpful). Describe the plot's main features in 2-3 sentences. Make sure your plot has an appropriate title and appropriate axis labels. Include any annotations (trend lines, etc.) that you think are helpful when describing your plot. (3 points for the plot, 3 for the description)
